document()
install()
install()
install()
getME(m, "beta")
library(geek)
getME(m, "beta")
document()
getME(m, "beta")
library(getME)
library(geek)
getME(m, "beta")
check()
getME(m, "beta")
getME(gmp, "beta")
getME(mgp, "beta")
mgp <- geeglm(outcome ~ treat,
data = respiratory,
id = useid,
family = "binomial", corstr = "exchangeable")
getME(mgp, "beta")
?geeglm
geelm.control()
geese.control()
names(geese.control)
names(geese.control())
load_all()
set.seed(123)
exdat <- data.frame(x = rnorm(20))
exdat$y <- exdat$x + rnorm(20)
exdat$id <- rep(1:5, each = 4)
exdat2 <- exdat[sample(1:20, 20),] #scramble order
m_eng_geeasy_ordered <-  geelm(y ~ x, id = id,
data = exdat, corstr = "exchangeable",
output = "geeglm")
m_eng_geepack_ordered <-  geelm(y ~ x, id = id,
data = exdat, corstr = "exchangeable",
output = "geeglm", engine = "geepack")
m_eng_geeasy_scrambled <-  geelm(y ~ x, id = id,
data = exdat2, corstr = "exchangeable",
output = "geeglm")
m_eng_geepack_scrambled <-  geelm(y~ x, id = id,
data = exdat2, corstr = "exchangeable",
output = "geeglm", engine = "geepack")
set.seed(123)
exdat <- data.frame(x = rnorm(20))
exdat$y <- exdat$x + rnorm(20)
exdat$id <- rep(1:5, each = 4)
exdat2 <- exdat[sample(1:20, 20),] #scramble order
m_eng_geeasy_ordered <-  geelm(y ~ x, id = id,
data = exdat, corstr = "exchangeable",
output = "geeglm")
load_all()
m_eng_geeasy_ordered <-  geelm(y ~ x, id = id,
data = exdat, corstr = "exchangeable",
output = "geeglm")
load_all()
m_eng_geeasy_ordered <-  geelm(y ~ x, id = id,
data = exdat, corstr = "exchangeable",
output = "geeglm")
thiscall
thiscall$engine
load_all()
m_eng_geeasy_ordered <-  geelm(y ~ x, id = id,
data = exdat, corstr = "exchangeable",
output = "geeglm")
load_all()
m_eng_geeasy_ordered <-  geelm(y ~ x, id = id,
data = exdat, corstr = "exchangeable",
output = "geeglm")
m_eng_geepack_ordered <-  geelm(y ~ x, id = id,
data = exdat, corstr = "exchangeable",
output = "geeglm", engine = "geepack")
load_all()
m_eng_geepack_ordered <-  geelm(y ~ x, id = id,
data = exdat, corstr = "exchangeable",
output = "geeglm", engine = "geepack")
oldorder_noNA
results <- geepack::geeglm(formula = formula, family = family,
data = data[oldorder_noNA, ],
weights = weights[oldorder_noNA],
offset = offset[oldorder_noNA],
control = geese.control(maxit = control$maxit,
epsilon = control$tol),
id = id[oldorder_noNA],
waves = waves[oldorder_noNA],
corstr = corstr,
scale.fix = control$scale.fix)
oldorder_noNA
data[oldorder_noNA, ]
weights[oldorder_noNA]
offset[oldorder_noNA]
id[oldorder_noNA]
waves[oldorder_noNA]
substitute(exdat[1:10,])
a <- 1:10
exdat[substitute(a),]
substitute(exdat[a,])
m_eng_geepack_ordered <-  geelm(y ~ x, id = id,
data = exdat, corstr = "exchangeable",
output = "geeglm", engine = "geepack")
geepack::geeglm(formula = formula, family = family,
data = data[substitute(oldorder_noNA), ],
#  weights = weights[oldorder_noNA],
#  offset = offset[oldorder_noNA],
#  control = geese.control(maxit = control$maxit,
#                          epsilon = control$tol),
id = id[oldorder_noNA],
#  waves = waves[oldorder_noNA],
corstr = corstr)
geepack::geeglm(formula = formula, family = family,
data = data[substitute(oldorder_noNA), ],
#  weights = weights[oldorder_noNA],
#  offset = offset[oldorder_noNA],
#  control = geese.control(maxit = control$maxit,
#                          epsilon = control$tol),
id = id[substitute(oldorder_noNA)],
#  waves = waves[oldorder_noNA],
corstr = corstr)
geepack::geeglm(formula = formula, family = family,
data = data[oldorder_noNA, ],
#  weights = weights[oldorder_noNA],
#  offset = offset[oldorder_noNA],
#  control = geese.control(maxit = control$maxit,
#                          epsilon = control$tol),
id = id[oldorder_noNA],
#  waves = waves[oldorder_noNA],
corstr = corstr)
?call
?do.call
?call
call(geepack::glm, data = exdat)
call(geepack::geeglm, data = exdat)
call("geepack::geeglm", data = exdat)
eval(call("geepack::geeglm", data = exdat))
?do.call
load_all()
m_eng_geeasy_ordered <-  geelm(y ~ x, id = id,
data = exdat, corstr = "exchangeable",
output = "geeglm")
m_eng_geepack_ordered <-  geelm(y ~ x, id = id,
data = exdat, corstr = "exchangeable",
output = "geeglm", engine = "geepack")
m_eng_geeasy_scrambled <-  geelm(y ~ x, id = id,
data = exdat2, corstr = "exchangeable",
output = "geeglm")
m_eng_geepack_scrambled <-  geelm(y~ x, id = id,
data = exdat2, corstr = "exchangeable",
output = "geeglm", engine = "geepack")
m_eng_geeasy_ordered
m_eng_geesy_scrambled
m_eng_geeasy_scrambled
#
m_eng_geeasy_ordered
m_eng_geepack_ordered
load_all()
m_eng_geeasy_ordered <-  geelm(y ~ x, id = id,
data = exdat, corstr = "exchangeable",
output = "geeglm")
m_eng_geepack_ordered <-  geelm(y ~ x, id = id,
data = exdat, corstr = "exchangeable",
output = "geeglm", engine = "geepack")
m_eng_geeasy_scrambled <-  geelm(y ~ x, id = id,
data = exdat2, corstr = "exchangeable",
output = "geeglm")
m_eng_geepack_scrambled <-  geelm(y~ x, id = id,
data = exdat2, corstr = "exchangeable",
output = "geeglm", engine = "geepack")
# order doesn't matter for geeasy
m_eng_geeasy_ordered
m_eng_geeasy_scrambled
#
m_eng_geeasy_ordered
m_eng_geepack_ordered
# Compare geeasy and geepack engines (scrambled data)
m_eng_geeasy_scrambled
m_eng_geepack_scrambled
load_all()
load_all()
m_eng_geeasy_scrambled <-  geelm(y ~ x, id = id,
data = exdat2, corstr = "exchangeable",
output = "geeglm")
m_eng_geepack_scrambled <-  geelm(y~ x, id = id,
data = exdat2, corstr = "exchangeable",
output = "geeglm", engine = "geepack")
m_eng_geepack_scrambled <-  geelm(y~ x, id = id,
data = exdat2, corstr = "exchangeable",
output = "geeglm", engine = "geepack")
weights
length(wights)
length(weights)
nrow(data[neworder,][-dropind,])
aa <- data[neworder,]
aa
aa[neworder,]
dropind
aa[-NULL]
aa[-NA,]
aa[-,]
aa[-dropind,]
aa
neworder
load_all()
m_eng_geepack_scrambled <-  geelm(y~ x, id = id,
data = exdat2, corstr = "exchangeable",
output = "geeglm", engine = "geepack")
load_all()
m_eng_geepack_scrambled <-  geelm(y~ x, id = id,
data = exdat2, corstr = "exchangeable",
output = "geeglm", engine = "geepack")
m_eng_geeasy_scrambled <-  geelm(y ~ x, id = id,
data = exdat2, corstr = "exchangeable",
output = "geeglm")
# Compare geeasy and geepack engines (scrambled data)
m_eng_geeasy_scrambled
m_eng_geepack_scrambled
# Compare geepack engined results with/without scrambling
m_eng_geepack_ordered
m_eng_geepack_scrambled
# Compare geepack engined results with/without scrambling
m_eng_geepack_ordered
m_eng_geepack_scrambled
load_all()
m_eng_geepack_scrambled
m_eng_geepack_scrambled <-  geelm(y~ x, id = id,
data = exdat2, corstr = "exchangeable",
output = "geeglm", engine = "geepack")
data
data
data
geepack::geeglm(formula, family, data, id = id)
m_eng_geepack_ordered
corstr
geepack::geeglm(formula, family, data, id = id, corstr = corstr)
m_eng_geeasy_ordered <-  geelm(y ~ x, id = id,
data = exdat, corstr = "exchangeable",
output = "geeglm")
m_eng_geepack_ordered <-  geelm(y ~ x, id = id,
data = exdat, corstr = "exchangeable",
output = "geeglm", engine = "geepack")
m_eng_geeasy_scrambled <-  geelm(y ~ x, id = id,
data = exdat2, corstr = "exchangeable",
output = "geeglm")
m_eng_geepack_scrambled <-  geelm(y~ x, id = id,
data = exdat2, corstr = "exchangeable",
output = "geeglm", engine = "geepack")
# order doesn't matter for geeasy
m_eng_geeasy_ordered
m_eng_geeasy_scrambled
# Compare geeasy and geepack engines (ordered data)
m_eng_geeasy_ordered
m_eng_geepack_ordered
# Compare geeasy and geepack engines (scrambled data)
m_eng_geeasy_scrambled
m_eng_geepack_scrambled
load_all()
m_eng_geeasy_scrambled <-  geelm(y ~ x, id = id,
data = exdat2, corstr = "exchangeable")
m_eng_geepack_scrambled <-  geelm(y~ x, id = id,
data = exdat2, corstr = "exchangeable",
engine = "geepack")
# Compare geepack engined results with/without scrambling
m_eng_geepack_ordered
m_eng_geepack_scrambled
m_eng_geepack_scrambled <-  geelm(y~ x, id = id,
data = exdat2, corstr = "exchangeable",
engine = "geepack")
ord_data
exdat
abc <- geepack::geeglm(formula = formula, family = family,
data = ord_data,
#  weights = weights[oldorder_noNA],
#  offset = offset[oldorder_noNA],
#  control = geese.control(maxit = control$maxit,
#                          epsilon = control$tol),
id = id[oldorder_noNA],
#  waves = waves[oldorder_noNA],
corstr = corstr)
abc <- geepack::geeglm(formula = formula, family = family,
data = ord_data,
#  weights = weights[oldorder_noNA],
#  offset = offset[oldorder_noNA],
#  control = geese.control(maxit = control$maxit,
#                          epsilon = control$tol),
id = id,
#  waves = waves[oldorder_noNA],
corstr = corstr)
abc
load_all()
m_eng_geeasy_scrambled <-  geelm(y ~ x, id = id,
data = exdat2, corstr = "exchangeable")
m_eng_geepack_scrambled <-  geelm(y~ x, id = id,
data = exdat2, corstr = "exchangeable",
engine = "geepack")
load_all()
m_eng_geeasy_scrambled <-  geelm(y ~ x, id = id,
data = exdat2, corstr = "exchangeable")
m_eng_geepack_scrambled <-  geelm(y~ x, id = id,
data = exdat2, corstr = "exchangeable",
engine = "geepack")
m_eng_geepack_ordered <-  geelm(y ~ x, id = id,
data = exdat, corstr = "exchangeable",
engine = "geepack")
load_all()
m_eng_geepack_scrambled <-  geelm(y~ x, id = id,
data = exdat2, corstr = "exchangeable",
engine = "geepack")
family
load_all()
m_eng_geepack_ordered <-  geelm(y ~ x, id = id,
data = exdat, corstr = "exchangeable",
engine = "geepack")
load_all()
m_eng_geeasy_scrambled <-  geelm(y ~ x, id = id,
data = exdat2, corstr = "exchangeable")
m_eng_geepack_scrambled <-  geelm(y~ x, id = id,
data = exdat2, corstr = "exchangeable",
engine = "geepack")
m_eng_geepack_scrambled
debugonce(geeglm)
m_eng_geepack_scrambled <-  geelm(y~ x, id = id,
data = exdat2, corstr = "exchangeable",
engine = "geepack")
data
waves
family
value
clusz
ans
ans$model
ans$X
cbind(data, ans$X)
ord_data
ord_dat
data
xxx <<- ord_dat
xxx <<- data
xxx
m_eng_geepack_scrambled2 <-  geelm(y~ x, id = id,
data = xxx, corstr = "exchangeable",
engine = "geepack")
m_eng_geepack_scrambled2
m_eng_geepack_scrambled2 <-  geelm(y~ x, id = id,
data = xxx, corstr = "exchangeable",
engine = "geepack")
m_eng_geepack_scrambled2
load_all()
m_eng_geepack_scrambled2 <-  geelm(y~ x, id = id,
data = xxx, corstr = "exchangeable",
engine = "geepack")
m_eng_geepack_scrambled2
m_eng_geepack_scrambled <-  geelm(y~ x, id = id,
data = exdat2, corstr = "exchangeable",
engine = "geepack")
m_eng_geepack_scrambled
##########################################################################################
# Do actual fitting      #################################################################
##########################################################################################
browser()
m_eng_geepack_scrambled <-  geelm(y~ x, id = id,
data = exdat2, corstr = "exchangeable",
engine = "geepack")
load_all()
m_eng_geepack_scrambled <-  geelm(y~ x, id = id,
data = exdat2, corstr = "exchangeable",
engine = "geepack")
results
do.call(geeglm, list(formula = formula, family = famret,
data = ord_data,
weights = weights,
offset = offset,
control = geepack_control,
id = id,
waves = waves,
corstr = corstr,
scale.fix = control$scale.fix))
# waves = waves,
corstr = corstr)#,
# waves = waves,
corstr = corstr)#,
do.call(geeglm, list(formula = formula, family = famret,
data = ord_data,
# weights = weights,
# offset = offset,
# control = geepack_control,
id = id,
# waves = waves,
corstr = corstr))#,
b <- list(x = c(-0.560475646552213, -0.23017748948328,
0.070508391424576, 1.55870831414912, 1.71506498688328, -1.26506123460653,
0.460916205989202, 0.129287735160946, 1.22408179743946, 0.359813827057364,
-0.445661970099958, -0.686852851893526, -0.555841134754075, 1.78691313680308,
0.400771450594052, 0.11068271594512, -0.472791407727934, 0.497850478229239,
0.701355901563686, -1.96661715662964), y = c(-1.62829935253906,
-0.448152404141575, -0.658382837866564, 0.532703865841884, 0.0283716761408677,
-1.11168811677002, 1.29870325048373, -0.49575153268831, 1.65054601891628,
0.0647423440650927, 0.808152950969969, -1.82498978890547, 0.265739946883412,
2.47555339090317, 1.29589711163907, 0.988816203478162, -0.853262408740317,
1.05176813176683, 0.395393237823769, -2.02852886720636), id = c(1L,
1L, 1L, 1L, 2L, 2L, 2L, 2L, 3L, 3L, 3L, 3L, 4L, 4L, 4L, 4L, 5L,
5L, 5L, 5L)), id = c(2L, 3L, 2L, 2L, 4L, 1L, 5L, 1L, 4L, 4L,
1L, 2L, 4L, 5L, 1L, 3L, 3L, 5L, 3L, 5L)
f
load_all()
m_eng_geepack_scrambled <-  geelm(y~ x, id = id,
data = exdat2, corstr = "exchangeable",
engine = "geepack")
id
ord_data[id]
ord_data$id
id[neworder]
load_all()
m_eng_geepack_scrambled <-  geelm(y~ x, id = id,
data = exdat2, corstr = "exchangeable",
engine = "geepack")
m_eng_geeasy_scrambled <-  geelm(y ~ x, id = id,
data = exdat2, corstr = "exchangeable")
m_eng_geepack_scrambled <-  geelm(y~ x, id = id,
data = exdat2, corstr = "exchangeable",
engine = "geepack")
load_all()
m_eng_geepack_scrambled <-  geelm(y~ x, id = id,
data = exdat2, corstr = "exchangeable",
engine = "geepack")
m_eng_geepack_scrambled
set.seed(123)
exdat <- data.frame(x = rnorm(20))
exdat$y <- exdat$x + rnorm(20)
exdat$id <- rep(1:5, each = 4)
exdat2 <- exdat[sample(1:20, 20),] #scramble order
m_eng_geeasy_ordered <-  geelm(y ~ x, id = id,
data = exdat, corstr = "exchangeable")
m_eng_geepack_ordered <-  geelm(y ~ x, id = id,
data = exdat, corstr = "exchangeable",
engine = "geepack")
m_eng_geeasy_scrambled <-  geelm(y ~ x, id = id,
data = exdat2, corstr = "exchangeable")
m_eng_geepack_scrambled <-  geelm(y~ x, id = id,
data = exdat2, corstr = "exchangeable",
engine = "geepack")
# order doesn't matter for geeasy
m_eng_geeasy_ordered
m_eng_geeasy_scrambled
load_all()
m_eng_geeasy_ordered <-  geelm(y ~ x, id = id,
data = exdat, corstr = "exchangeable")
m_eng_geepack_ordered <-  geelm(y ~ x, id = id,
data = exdat, corstr = "exchangeable",
engine = "geepack")
m_eng_geeasy_scrambled <-  geelm(y ~ x, id = id,
data = exdat2, corstr = "exchangeable")
m_eng_geepack_scrambled <-  geelm(y~ x, id = id,
data = exdat2, corstr = "exchangeable",
engine = "geepack")
# order doesn't matter for geeasy
m_eng_geeasy_ordered
m_eng_geeasy_scrambled
load_all()
m_eng_geeasy_scrambled <-  geelm(y ~ x, id = id,
data = exdat2, corstr = "exchangeable")
results
load_all()
m_eng_geeasy_ordered <-  geelm(y ~ x, id = id,
data = exdat, corstr = "exchangeable")
m_eng_geepack_ordered <-  geelm(y ~ x, id = id,
data = exdat, corstr = "exchangeable",
engine = "geepack")
m_eng_geeasy_scrambled <-  geelm(y ~ x, id = id,
data = exdat2, corstr = "exchangeable")
m_eng_geepack_scrambled <-  geelm(y~ x, id = id,
data = exdat2, corstr = "exchangeable",
engine = "geepack")
# order doesn't matter for geeasy
m_eng_geeasy_ordered
m_eng_geeasy_scrambled
# Compare geeasy and geepack engines (ordered data)
m_eng_geeasy_ordered
m_eng_geepack_ordered
# Compare geeasy and geepack engines (scrambled data)
m_eng_geeasy_scrambled
m_eng_geepack_scrambled
# Compare geepack engined results with/without scrambling
m_eng_geepack_ordered
m_eng_geepack_scrambled
load_all()
m_eng_geeasy_ordered <-  geelm(y ~ x, id = id,
data = exdat, corstr = "exchangeable")
m_eng_geepack_ordered <-  geelm(y ~ x, id = id,
data = exdat, corstr = "exchangeable",
engine = "geepack")
m_eng_geeasy_scrambled <-  geelm(y ~ x, id = id,
data = exdat2, corstr = "exchangeable")
m_eng_geepack_scrambled <-  geelm(y~ x, id = id,
data = exdat2, corstr = "exchangeable",
engine = "geepack")
# order doesn't matter for geeasy
# order doesn't matter for geeasy
m_eng_geeasy_ordered
m_eng_geeasy_scrambled
# Compare geeasy and geepack engines (ordered data)
m_eng_geeasy_ordered
m_eng_geepack_ordered
# Compare geeasy and geepack engines (scrambled data)
m_eng_geeasy_scrambled
m_eng_geepack_scrambled
# Compare geepack engined results with/without scrambling
m_eng_geepack_ordered
m_eng_geepack_scrambled
source('/home/ahp/Dropbox/bscopiesDB/gee/geek/devnotes/moretests.R')
document()
load_all()
document()
